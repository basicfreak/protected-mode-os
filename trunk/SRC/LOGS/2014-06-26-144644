=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2014.06.26 14:46:44 =~=~=~=~=~=~=~=~=~=~=~=
_FDC_init()
FDC_Reset()
DOR_Handler(0x0, FALSE, TRUE)
_FDC_Write(0x3F0, 0x2, 0x0)
DOR_Handler(0x0, TRUE, FALSE)
_FDC_Write(0x3F0, 0x2, 0x1C)

FDC IRQ RECIVED
FDC_Speed(0x0, 0x0)
_FDC_Write(0x3F0, 0x7, 0x0)
_FDC_WAIT_IR()
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0xC0
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0xC1
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0xC2
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0xC3
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
_FDC_Write(0x3F0, 0x5, 0x13)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x11)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
FDC_Specify(0x0, TRUE, 0x8, 0x5, 0xF)
_FDC_Write(0x3F0, 0x5, 0x3)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Write(0x3F0, 0x5, 0x8F)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0xA)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
FDC_Calibrate(0x0)
DOR_Handler(0x0, TRUE, FALSE)
_FDC_Write(0x3F0, 0x2, 0x1C)
_FDC_Write(0x3F0, 0x5, 0x7)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_WAIT_IR()

FDC IRQ RECIVED
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x81
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD1
_FDC_READ(0x3F0, 0x5) = 0x20
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
DOR_Handler(0x0, FALSE, FALSE)
_FDC_Write(0x3F0, 0x2, 0xC)
lbaCHS(0x0, 0x0, 0x0, 0x1)
_DMA_outb(0xA, 0x4)
_DMA_outb(0xA, 0x4)
_DMA_outb(0xF, 0x46)
_DMA_outb(0xE, 0xFF)
_DMA_outb(0x4, 0x0)
_DMA_outb(0x4, 0x10)
_DMA_outb(0x81, 0x0)
_DMA_outb(0x5, 0x0)
_DMA_outb(0x5, 0x2)
_DMA_outb(0xA, 0x2)
DOR_Handler(0x0, TRUE, FALSE)
_FDC_Write(0x3F0, 0x2, 0x1C)
_FDC_Write(0x3F0, 0x5, 0xF)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x1)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_WAIT_IR()

FDC IRQ RECIVED
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x81
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD1
_FDC_READ(0x3F0, 0x5) = 0x20
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x1
_FDC_Write(0x3F0, 0x5, 0x66)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x1)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x2)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x2)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0x1B)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_Write(0x3F0, 0x5, 0xFF)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x90
_FDC_WAIT_IR()

FDC IRQ RECIVED
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x40
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x4
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x2) = 0x10
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x0
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x1
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x2
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0xD0
_FDC_READ(0x3F0, 0x5) = 0x80
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_READ(0x3F0, 0x4) = 0x80
_FDC_READ(0x3F0, 0x5) = 0x80
DOR_Handler(0x0, FALSE, FALSE)
_FDC_Write(0x3F0, 0x2, 0xC)
Fatal System Error
Division By Zero Exception
EAX = 0x0EBX = 0x0ECX = 0x0EDX = 0x0
EDI = 0x26404ESI = 0x263EBEBP = 0x111F98ESP = 0x111F5C
GS = 0x10FS = 0x10ES = 0x10DS = 0x10
EIP = 0x1095B3CS = 0x8EFLAGS = 0x10256SS = 0x1
USER-ESP = 0x0ERROR-CODE = 0x0

RAM[0x1095A3 - 0x1095C3]:
5 89 C1 8B 45 F4 F B7 40 B F B7 D8 89 C8 99 (F7)  FB A3 70 81 11 0 83 C4 24 5B 5D C3 55 89 E5 81 

ADD MOV #2 MOV INC EBP HLT POP CS MOV INC EAX OR POP CS MOV ESC MOV ENTER CWD (#3)  STI MOV JO ADD ADC ADD SUB LES AND POP EBX POP EBP RETN PUSH EBP MOV IN ADD 

    E    @        ()   p      $ [ ]  U    
ESP - RAM[0x111F4C - 0x111F6C]:
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 B3 95 10 0 8 0 0 0 56 

                                V 
System  Halted
