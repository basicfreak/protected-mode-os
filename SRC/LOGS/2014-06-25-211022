=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2014.06.25 21:10:22 =~=~=~=~=~=~=~=~=~=~=~=
_FDC_init()

test
lbaCHS(0x0, 0x0, 0x0, 0x1)

_DMA_outb(0xA, 0x6)

_DMA_outb(0xC, 0x46)

_DMA_outb(0xB, 0x46)

_DMA_outb(0x4, 0x0)

_DMA_outb(0x4, 0x10)

_DMA_outb(0x81, 0x0)

_DMA_outb(0x5, 0xFF)

_DMA_outb(0x5, 0x23)

_DMA_outb(0xA, 0x2)

DOR_Handler(0x0, TRUE, FALSE)

_FDC_Write(0x3F0, 0x2, 0x1C)


FDC IRQ RECIVED

_FDC_Write(0x3F0, 0x5, 0xF)					SEEK

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90


FDC IRQ RECIVED

_FDC_WAIT_IR()

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x81

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD1

_FDC_READ(0x3F0, 0x5) = 0x20

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Write(0x3F0, 0x5, 0xE6)					read sector

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x1)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x1B)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0xFF)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_WAIT_IR()


FDC IRQ RECIVED

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x40				[ST0]		0100 0000		Abnormal Termination

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x4				[ST1]		0000 0100		No Data

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x10				[ST2]		0001 0000		Wrong Cylinder

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x1

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x2

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0xC1

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

DOR_Handler(0x0, FALSE, FALSE)

_FDC_Write(0x3F0, 0x2, 0xC)

ramx 1000 11ff
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

testb
lbaCHS(0x1, 0x0, 0x0, 0x2)

_DMA_outb(0xA, 0x6)

_DMA_outb(0xC, 0x46)

_DMA_outb(0xB, 0x46)

_DMA_outb(0x4, 0x0)

_DMA_outb(0x4, 0x10)

_DMA_outb(0x81, 0x0)

_DMA_outb(0x5, 0xFF)

_DMA_outb(0x5, 0x23)

_DMA_outb(0xA, 0x2)

DOR_Handler(0x0, TRUE, FALSE)

_FDC_Write(0x3F0, 0x2, 0x1C)

_FDC_Write(0x3F0, 0x5, 0xF)				SEEK

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90


FDC IRQ RECIVED

_FDC_WAIT_IR()

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x81

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD1

_FDC_READ(0x3F0, 0x5) = 0x20

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Write(0x3F0, 0x5, 0xE6)				READ

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x3)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x1B)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0xFF)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_WAIT_IR()


FDC IRQ RECIVED

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x40			[ST0] ABNORMAL TERMINATION

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x4			[ST1] NO DATA

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x10			[ST2] WRONG CYLINDER

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x2

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x2

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0xC2

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

DOR_Handler(0x0, FALSE, FALSE)

_FDC_Write(0x3F0, 0x2, 0xC)

test
lbaCHS(0x0, 0x0, 0x0, 0x1)

_DMA_outb(0xA, 0x6)

_DMA_outb(0xC, 0x46)

_DMA_outb(0xB, 0x46)

_DMA_outb(0x4, 0x0)

_DMA_outb(0x4, 0x10)

_DMA_outb(0x81, 0x0)

_DMA_outb(0x5, 0xFF)

_DMA_outb(0x5, 0x23)

_DMA_outb(0xA, 0x2)

DOR_Handler(0x0, TRUE, FALSE)

_FDC_Write(0x3F0, 0x2, 0x1C)

_FDC_Write(0x3F0, 0x5, 0xF)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90


FDC IRQ RECIVED

_FDC_WAIT_IR()

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x81

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD1

_FDC_READ(0x3F0, 0x5) = 0x20

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Write(0x3F0, 0x5, 0xE6)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x1)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x1B)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0xFF)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_WAIT_IR()


FDC IRQ RECIVED

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x40

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x4

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x10

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x1

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x2

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0xC3

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

DOR_Handler(0x0, FALSE, FALSE)

_FDC_Write(0x3F0, 0x2, 0xC)

testb
lbaCHS(0x1, 0x0, 0x0, 0x2)

_DMA_outb(0xA, 0x6)

_DMA_outb(0xC, 0x46)

_DMA_outb(0xB, 0x46)

_DMA_outb(0x4, 0x0)

_DMA_outb(0x4, 0x10)

_DMA_outb(0x81, 0x0)

_DMA_outb(0x5, 0xFF)

_DMA_outb(0x5, 0x23)

_DMA_outb(0xA, 0x2)

DOR_Handler(0x0, TRUE, FALSE)

_FDC_Write(0x3F0, 0x2, 0x1C)

_FDC_Write(0x3F0, 0x5, 0xF)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90


FDC IRQ RECIVED

_FDC_WAIT_IR()

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x81

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD1

_FDC_READ(0x3F0, 0x5) = 0x20

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Write(0x3F0, 0x5, 0xE6)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x0)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x2)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x3)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0x1B)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_Write(0x3F0, 0x5, 0xFF)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x90

_FDC_WAIT_IR()


FDC IRQ RECIVED

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x40

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x4

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x10

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x0

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x2

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x2

_FDC_SENSEINT(*st0, *cyl)

_FDC_Write(0x3F0, 0x5, 0x8)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0xD0

_FDC_READ(0x3F0, 0x5) = 0x80

_FDC_Read(0x3F0, 0x5)

MSR_Handler()

_FDC_Read(0x3F0, 0x4)

_FDC_READ(0x3F0, 0x4) = 0x80

_FDC_READ(0x3F0, 0x5) = 0x80

DOR_Handler(0x0, FALSE, FALSE)

_FDC_Write(0x3F0, 0x2, 0xC)

Fatal System Error

Invalid Opcode Exception

EAX = 0x16EBX = 0x26260ECX = 0xB8E60EDX = 0x3D5

EDI = 0x263F8ESI = 0x263EBEBP = 0x110F90ESP = 0x110FA4

GS = 0x23FS = 0x23ES = 0x23DS = 0x23

EIP = 0x23CS = 0x1BEFLAGS = 0x10246SS = 0x23

USER-ESP = 0x110FC0ERROR-CODE = 0x0


RAM[0x13 - 0x33]:

F0 54 FF 0 F0 79 EA 0 F0 21 EA 0 F0 A5 FE 0 (F0)  87 E9 0 F0 60 7D 0 F0 60 7D 0 F0 60 7D 0 F0 


LOCK PUSH ESP #5 ADD LOCK JNS JMP ADD LOCK AND JMP ADD LOCK MOVSW $4 ADD (LOCK)  XCHG JMP ADD LOCK PUSHA JNL ADD LOCK PUSHA JNL ADD LOCK PUSHA JNL ADD LOCK 


 T    y    !       ()     ` }   ` }   ` }   

ESP - RAM[0x110FB0 - 0x110FD0]:

1B 0 0 0 46 2 1 0 C0 F 11 0 23 0 0 0 20 5C 11 0 CC CC 10 0 0 0 0 0 D8 C 10 0 19 


        #      \                

Attempting Restoration

