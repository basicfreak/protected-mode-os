=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2014.06.24 12:37:44 =~=~=~=~=~=~=~=~=~=~=~=
initfdc

_DMA_outb(0xA, 0x6)					MASK DMA CHANNEL 2
_DMA_outb(0xC, 0xFF)					RESET MASTER FF
_DMA_outb(0x4, 0x0)					ADDR LOW
_DMA_outb(0x4, 0x10)					ADDR HIGH
_DMA_outb(0xC, 0xFF)					RESET MASTER FF
_DMA_outb(0x5, 0xFF)					COUNT LOW
_DMA_outb(0x5, 0x23)					COUNT HIGH
_DMA_outb(0x81, 0x0)					ADDR EXT
_DMA_outb(0xA, 0x2)					UNMASK DMA CHANNEL 2
_FDC_Write(0x3F0, 0x2, 0x0)			FDC RESET
FDC IRQ RECIVED
_FDC_Write(0x3F0, 0x2, 0xC)			FDC ENABLE
FDC IRQ RECIVED
_FDC_Write(0x3F0, 0x7, 0x0)			CCR SPEED
_FDC_WAIT_IR()
_FDC_Write(0x3F0, 0x5, 0x8)			FDC SENSE INT
...
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0xC0			[ST0]				1100 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[CYL]				0000 0000
_FDC_Write(0x3F0, 0x5, 0x8)			FDC SENSE INT
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
...
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0xC1			[ST0]				1100 0001
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[CYL]				0000 0000
_FDC_Write(0x3F0, 0x5, 0x8)			FDC SENSE INT
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
...
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0xC2			[ST0]				1100 0010
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[CYL]				0000 0000
_FDC_Write(0x3F0, 0x5, 0x8)			FDC SENSE INT
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
...
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0xC3			[ST0]				1100 0011
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[CYL]				0000 0000
_FDC_Write(0x3F0, 0x5, 0x13)			FDC CONFIGURE
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			DEFAULT CONFIG
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x10)			POLLING DISABLED
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			precomp_val = 0 ?
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x3)			FDC SPECIFY
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
_FDC_Write(0x3F0, 0x5, 0x30)			(3 << 4) | (240 & 0XF)
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x21)			(16 << 1) | 1
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x2, 0x1C)			MOTOR ON
_FDC_Write(0x3F0, 0x5, 0x7)			CALIBRATE
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			DRIVE
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_WAIT_IR()
FDC IRQ RECIVED
_FDC_Write(0x3F0, 0x5, 0x8)			SENSE INT
_FDC_READ(0x3F0, 0x4) = 0x81			DATA READY
...
_FDC_READ(0x3F0, 0x4) = 0xD1			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x20			[ST0]				0010 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[CYL]				0000 0000
_FDC_Write(0x3F0, 0x2, 0xC)			MOTOR OFF

echo FDC Seek Test... Manual
FDC Seek Test... Manual 

outb 3f2 1c
outb 3f5 f
outb 3f5 0
outb 3f5 9
FDC IRQ RECIVED
outb 3f5 8
inb 3f5
We recived 20 = 32 =  
inb 3f5
We recived 9 = 9 = 
outb 3f5 f
outb 3f5 0
outb 3f5 0
FDC IRQ RECIVED
outb 3f5 8
inb 3f5
We recived 20 = 32 =  
inb 3f5
We recived 0 = 0 = 
outb 3f2 c

echo Seek test passed!
Seek test passed! 

echo now for my read test command
now for my read test command 

test
_FDC_Write(0x3F0, 0x2, 0x1C)			MOTOR ON
_FDC_Write(0x3F0, 0x5, 0xF)			SEEK
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			HEAD
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			CYLINDER
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
FDC IRQ RECIVED
_FDC_WAIT_IR()
_FDC_Write(0x3F0, 0x5, 0x8)			FDC SENSE INT
_FDC_READ(0x3F0, 0x4) = 0x81			DATA READY
...
_FDC_READ(0x3F0, 0x4) = 0xD1			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x20			[ST0]				0010 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[CYL]				0000 0000
_DMA_outb(0xA, 0x6)					MASK DMA CHANNEL 2
_DMA_outb(0xC, 0x46)					(SINGLE TRANSFER | READ)
_DMA_outb(0xB, 0x46)					(SINGLE TRANSFER | READ)
_DMA_outb(0xA, 0x2)					UNMASK DMA CHANNEL 2
_FDC_Write(0x3F0, 0x5, 0xE6)			(READ SECTOR | MULTI-TRACK | SKIP | DD)
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			(HEAD << 2) | DRIVE
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			TRACK
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x0)			HEAD
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x1)			SECTOR
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x2)			DTL
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x2)			(SECTOR + 1) OR 18
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0x1B)			GAP
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_Write(0x3F0, 0x5, 0xFF)			SECTOR LENGTH?
_FDC_READ(0x3F0, 0x4) = 0x90			DATA READY
_FDC_WAIT_IR()
FDC IRQ RECIVED
_FDC_READ(0x3F0, 0x4) = 0xF0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0xEB			[ST0]			1110 1011
_FDC_READ(0x3F0, 0x4) = 0xF0			DATA READY
FDC IRQ RECIVED
_FDC_READ(0x3F0, 0x5) = 0x40			[ST1]			0100 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x10			[ST2]			0001 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[Cylinder]		0000 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[Head]			0000 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x0			[Sector #]		0000 0000
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x1			[Sector Size]	0000 0001
_FDC_Write(0x3F0, 0x5, 0x8)			Sense Int
_FDC_READ(0x3F0, 0x4) = 0xD0			DATA READY
...
_FDC_READ(0x3F0, 0x4) = 0x80			DATA READY
_FDC_READ(0x3F0, 0x5) = 0x2			[ST0?]			0000 0010
_FDC_READ(0x3F0, 0x4) = 0x0
_FDC_READ(0x3F0, 0x4) = 0x0
........