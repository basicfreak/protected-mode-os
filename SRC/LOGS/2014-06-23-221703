=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2014.06.23 22:17:03 =~=~=~=~=~=~=~=~=~=~=~=
_FDC_init()
FDC_Reset()
DOR_Handler(0x0, FALSE, TRUE)
_FDC_Write(0x3F0, 0x2, 0x0)
DOR_Handler(0x0, FALSE, FALSE)
_FDC_Write(0x3F0, 0x2, 0xC)
FDC IRQ RECIVED
FDC_Speed(0x0, 0x0)
_FDC_Write(0x3F0, 0x7, 0x0)
_FDC_WAIT_IR()
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x13)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x32)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
FDC_Specify(0x0, TRUE, 0x3, 0x10, 0xF0)
_FDC_Write(0x3F0, 0x5, 0x3)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x30)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x21)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
FDC_Calibrate(0x0)
DOR_Handler(0x0, TRUE, FALSE)
_FDC_Write(0x3F0, 0x2, 0x1C)
_FDC_Write(0x3F0, 0x5, 0x7)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_WAIT_IR()
FDC IRQ RECIVED
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
DOR_Handler(0x0, FALSE, FALSE)
_FDC_Write(0x3F0, 0x2, 0xC)
test
lbaCHS(0x0, 0x0, 0x0, 0x1)
DOR_Handler(0x0, TRUE, FALSE)
_FDC_Write(0x3F0, 0x2, 0x1C)
_FDC_Write(0x3F0, 0x5, 0xF)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
FDC IRQ RECIVED
_FDC_WAIT_IR()
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0xE6)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x0)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x1)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x2)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x2)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0x1B)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Write(0x3F0, 0x5, 0xFF)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_WAIT_IR()
FDC IRQ RECIVED
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)FDC IRQ RECIVED

_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_SENSEINT(*st0, *cyl)
_FDC_Write(0x3F0, 0x5, 0x8)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
_FDC_Read(0x3F0, 0x5)
MSR_Handler()
_FDC_Read(0x3F0, 0x4)
DOR_Handler(0x0, FALSE, FALSE)
_FDC_Write(0x3F0, 0x2, 0xC)
echo well there was init then read
well there was init then read 
echo closing this file next file will have my test read outb and inbs
closing this file next file will have my test read outb and inbs 
ex  